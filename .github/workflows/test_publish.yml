# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries

name: Test & Publish

on:
  push:
    paths-ignore:
      - '**/README.md'
      - 'doc/*'
  pull_request:
    paths-ignore:
      - '**/README.md'
      - 'doc/*'

jobs:
  test-publish:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - python-version: "3.10"
            numpy-version: "1.26.4"
          - python-version: "3.10"
            numpy-version: "2.0.2"
          - python-version: "3.13"
            numpy-version: "2.2.5"

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install numpy==${{ matrix.numpy-version }}
        pip install mne flake8 pytest twine pymatreader
        pip install -e .
        mne sys_info -d
      shell: bash -el {0}

    - name: Lint
      run: |
        flake8 .

    - name: Test
      run: |
        pytest

    - name: Build Package
      run: |
        pip install setuptools wheel twine
        python setup.py sdist bdist_wheel
      shell: bash -el {0}

    - name: Test sdist
      run: |
        twine check dist/*
        ls dist/*.tar.gz | wc -l | grep "^1$"
        pip install dist/*.tar.gz
      shell: bash -el {0}

    - name: Publish to Test PyPI
      if: github.event_name == 'push' && github.ref == 'refs/heads/stable'
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.TEST_PYPI_API_TOKEN }}
      run: |
        twine upload --repository testpypi dist/*

    - name: Publish to PyPI (release)
      if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
      run: |
        twine upload dist/*
